/**
 * @remix-run/node v1.1.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var stream = require('stream');

class Meter extends stream.Transform {
  constructor(field, maxBytes) {
    super();
    this.field = field;
    this.maxBytes = maxBytes;
    this.bytes = 0;
  }

  _transform(chunk, _, callback) {
    this.bytes += chunk.length;
    this.push(chunk);

    if (typeof this.maxBytes === "number" && this.bytes > this.maxBytes) {
      return callback(new MeterError(this.field, this.maxBytes));
    }

    callback();
  }

}
class MeterError extends Error {
  constructor(field, maxBytes) {
    super(`Field "${field}" exceeded upload size of ${maxBytes} bytes.`);
    this.field = field;
    this.maxBytes = maxBytes;
  }

}

exports.Meter = Meter;
exports.MeterError = MeterError;
