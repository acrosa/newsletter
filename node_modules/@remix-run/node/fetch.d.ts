import type AbortController from "abort-controller";
import type { RequestInfo, RequestInit, Response } from "node-fetch";
import { Request as BaseNodeRequest } from "node-fetch";
import type { UploadHandler } from "./formData";
export type { HeadersInit, RequestInfo, ResponseInit } from "node-fetch";
export { Headers, Response } from "node-fetch";
interface NodeRequestInit extends RequestInit {
    abortController?: AbortController;
}
declare class NodeRequest extends BaseNodeRequest {
    private abortController?;
    constructor(input: RequestInfo, init?: NodeRequestInit | undefined);
    formData(uploadHandler?: UploadHandler): Promise<FormData>;
    clone(): NodeRequest;
}
export { NodeRequest as Request, NodeRequestInit as RequestInit };
/**
 * A `fetch` function for node that matches the web Fetch API. Based on
 * `node-fetch`.
 *
 * @see https://github.com/node-fetch/node-fetch
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
 */
export declare function fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;
